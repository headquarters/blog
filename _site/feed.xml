<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Michael's Headquarters</title>
    <description>Michael Head is a UX-focused software engineer with more than 8 years of experience building awesome user experiences for small agencies, mid-sized companies, and Fortune 50 corporations.
</description>
    <link>http://michaelehead.com/</link>
    <atom:link href="http://michaelehead.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 05 Aug 2017 12:53:22 -0400</pubDate>
    <lastBuildDate>Sat, 05 Aug 2017 12:53:22 -0400</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Baby Registries and Service Design</title>
        <description>&lt;p&gt;My day job is programming, but one of my personal interests is design, especially user experience design.&lt;br /&gt;
One form of design is &lt;a href=&quot;https://www.nngroup.com/articles/service-design-101/&quot;&gt;service design&lt;/a&gt;, where
an organization attempts to organize its people and resources in such a way as to improve the experience of employees and customers. 
This post explores the service design of baby registries for two large retails: Babies R’ Us and amazon.com.&lt;/p&gt;

&lt;p&gt;In June of this year, my wife gave birth to our 3 beautiful daughters—yes, triplets. :scream emoji:&lt;/p&gt;

&lt;p&gt;It was a pretty risky pregnancy because two of the 3 shared
everything in utero, called &lt;a href=&quot;https://en.wikipedia.org/wiki/Monoamniotic_twins&quot;&gt;monoamniotic, or MOMO, twins&lt;/a&gt;. So, we were somewhat fearful
the whole pregnancy that all three might not make it, but thankfully they did. We never had any baby showers before the kids were born, because it
 would have been a painful reminder to have 3 of something when we only needed one or two in the end.&lt;/p&gt;

&lt;p&gt;In July, we started the process of putting together a registry for an upcoming baby shower. 
We settled on two places to register: Babies R’ Us and amazon.com. The shower was going to consist of 
mixed generations of folks, some of which prefer not to shop online, so Babies R’ Us made sense for that
part of the guest list. For the remainder of folks, especially those who can’t travel to be here in person,
the amazon.com list made a lot of sense.&lt;/p&gt;

&lt;p&gt;The experience registering at Babies R’ Us was a pain, all revolving around a single 
form-field input validation issue: you cannot register for a baby shower if the baby has already 
been born (i.e. your expected date is in the past). This is an example of the “backstage” coming to the forefront in the user interface: 
some limitation of technology, some internal process, or some cultural oversight in the Babies R’ Us organization enforced a
rule at the lowest level of touchpoints with users, a form field.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/images/posts/babiesrus/registry-creation-error.png&quot; alt=&quot;Screenshot of registry creation error on babiesrus.com&quot; /&gt;
    &lt;figcaption&gt;The baby registry form on babiesrus.com would not allow a due date in the past.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Our original due date was in August, but we didn’t want to put that because
they were already born (or “arrived” as the UI states). It seemed disenguous to say they weren’t born yet when they were. We decided we’d
try to register in person, hoping that wouldn’t be a problem for an associate. 
[screenshot of form field only allowing 2019 when month is June]&lt;/p&gt;

&lt;p&gt;amazon.com, on the other hand, allowed registering when the babies had already been born, 
but did provide a warning message in their form indicating that we had picked a date in the past. In the end, it didn’t seem to have affected any of the actual registry creation, though. One creepy
thing Amazon did was pre-populate the registry with some “sponsored” items, which
I promptly removed. If they had been “suggestions” and not just plopped into the list from the
beginning, then I think that would have been less creepy. This is a breakdown in speaking the customer’s language–as a new
parent, I want “suggestions” for what to purchase, but as a customer I am always on the lookout to avoid overt advertisements.&lt;/p&gt;

&lt;p&gt;Since we weren’t able to register at babiesrus.com (which just redirects to toysrus.com…another issue of backstage components influencing frontstage interfaces), we went to the 
nearest Babies R’ Us store to register in person. We went to the Baby Registry desk and spoke
with the associates there. They gave us a &lt;a href=&quot;/images/posts/babiesrus/registry-form-large.png&quot;&gt;paper form&lt;/a&gt; to fill out to create a registry.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/images/posts/babiesrus/registry-password.png&quot; alt=&quot;Scanned copy of registry paper form password section&quot; /&gt;
    &lt;figcaption&gt;The Babies R' Us registry creation form had this section for writing your password.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;A few concerns here: it’s a paper form and the associates did not offer to allow us to fill
out the form online—they were effectively transcribing from written form to online form. This
is an inefficient workflow for the organization and for users (they have to put the information on paper, then
wait for an associate to transcribe it). Also, there is a big red flag for security here: asking 
users to put a password down in plaintext on a paper form is a Bad Thing(tm). Users tend to 
reuse passwords across sites, so this is giving their password to associates on a piece
of paper that may be reused on another site. The assumption is to trust the associates, but 
why put employees and customers in such a situation where they have to be concerned about this?
Just letting customers fill out a form on a computer at the Registry desk would obviate this problem.&lt;/p&gt;

&lt;p&gt;It turned out that the associate was transcribing directly into the same form we tried to fill out online ourselves. 
The associate had no special access to the “backstage” of the organization’s systems to do “magical”
things like simply put a due date in the past. Since the babies were technically due in August, we had them use
the original due date for their “arrival date” instead of the date they were born, despite having alread “arrived”. 
In hindsight, we should have done the same in the online form, but what if we had waited until the after the due 
date to sign up? We would have run into the same problem.&lt;/p&gt;

&lt;p&gt;We finally got our account and our registry gun and went off to shoot a bunch of barcodes.&lt;/p&gt;

&lt;p&gt;The barcode shooting had a fun, tactile experience to it that simply adding items online can’t quite
compete with. Sure, searching for anything imaginable on amazon.com is nice, but sometimes you don’t know
what kinds of baby things are even out there that you &lt;em&gt;might&lt;/em&gt; need, so how do you search for those things?
This is where being in a store with actual shelves beats online shopping in my opinion. Despite the fun, tactile experience, the 
gun itself had some UX issues–it couldn’t scan some barcodes and it required multiple scans to increase
the quantity, which wouldn’t have been such a big deal if it scanned successfully every time and didn’t have a 10-20 second “cooldown” period before the next scan could happen. The associates suggested scanning as much as possible and removing/editing things later online.&lt;/p&gt;

&lt;p&gt;Later in the day, we tried to log into the registry by going to babiesrus.com. As you can see in the screenshot below
there is a very prominent My Account/Sign In link in the upper right. On the same row of links, less prominent due
to the lower contrast text, is a Baby Registry link. Since we had just gone through the trouble of creating 
what I thought was a Babies R’ Us account, I tried logging into my account by going to MyAccount/Sign In. 
Turns out, that was not a Babies R Us account we set up, but truly JUST a baby registry…account. The correct
path is: click Baby Registry and then click the “update” button under “update my registry”.&lt;/p&gt;

&lt;p&gt;Not only are they separate “accounts” but they have different password rules as well. The normal account
has a minimum of 8 characters and maximum of 50 characters for the password length, while the registry account
has a minimum of 6 characters and maximum of 10 characters. This is definitely a sign of backstage processes or technology
has come to the frontstage UI in a bad way–one team works on the normal account and the other works on baby registry accounts,
and they never coordinated internally. What if, in the future, some product manager wants a way to create normal accounts by 
“migrating” registry accounts? Many passwords (6 and 7 characters long) would fail the migration and you end up with data migration headaches.&lt;/p&gt;

&lt;figure&gt;
    &lt;img src=&quot;/images/posts/babiesrus/registry-login-page.png&quot; alt=&quot;Screenshot of babiesrus.com registry login page&quot; /&gt;
    &lt;figcaption&gt;The registry account requires minimum length of 10 for the password.&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;figure&gt;
    &lt;img src=&quot;/images/posts/babiesrus/account-login-page.png&quot; alt=&quot;Screenshot of babiesrus.com account login page&quot; /&gt;
    &lt;figcaption&gt;The non-registry account requires minimum length of 8 for the password (plus a whole host of other requirements).&lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Creating a baby registry on amazon.com was much easier than going through the process on babiesrus.com. Less of Amazon’s backstage
leaks into the frontstage UI in negative ways and the result is a nicer user experience for the whole service. Babies R’ Us has some work
to do to improve its user experience for baby registries, but some of it is very low hanging fruit (e.g. the form field validation) that could
ease the frustration of dealing with their service.&lt;/p&gt;

&lt;p&gt;Update: they’ve undergone a redesign so some screenshots are out of date and they now use babiesrus.com, so they’re improving!&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Aug 2017 05:48:00 -0400</pubDate>
        <link>http://michaelehead.com/2017/08/05/baby-registries-and-service-design.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2017/08/05/baby-registries-and-service-design.html</guid>
        
        <category>ux</category>
        
        <category>design</category>
        
        
      </item>
    
      <item>
        <title>Some Personal Notes on Development</title>
        <description>&lt;p&gt;After posting &lt;a href=&quot;/2017/07/16/personal-notes-on-ux-design.html&quot;&gt;some personal notes on UX design&lt;/a&gt;, I figured why not publish all the notes
I keep for development, too? Below are random snippets of code I’ve found useful, CLI commands, and other tidbits that I 
always find myself coming back to for reference.&lt;/p&gt;

&lt;hr /&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Kill a process by name (only verified on macOS)&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Example: `sudo pkill node`&lt;/span&gt;
sudo pkill &lt;span class=&quot;nv&quot;&gt;$PROCESSNAME&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# SSH config with multiple hostnames and a domain controller prefix for username, ~/.ssh/config&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# This allows you to do something like `ssh name1` and it will expand to include the username and proper key &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# It's counterintuitive, but the generic settings (Host *) go at the bottom of the file&lt;/span&gt;
Host name1 name2 name3 
  HostName %h.domain.tld
  &lt;span class=&quot;c&quot;&gt;# Rarely needed, more likely your username does not have a prefix&lt;/span&gt;
  User &lt;span class=&quot;s2&quot;&gt;&quot;controller&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sername&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Override specific properties of the &quot;*&quot; Host setting&lt;/span&gt;
Host name4
  HostName differentdomain.tld
  IdentityFile ~/.ssh/private_key2

Host &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
  IdentityFile ~/.ssh/private_key
  ForwardAgent yes
  &lt;span class=&quot;c&quot;&gt;# These two are macOS specific&lt;/span&gt;
  AddKeysToAgent yes
  UseKeychain yes  &lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Snippets from .bash_profile &lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Edit the profile itself&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;showprofile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cat ~/.bash_profile&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;editprofile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;nano ~/.bash_profile&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;loadprofile&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;source ~/.bash_profile&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# macOS flushdns&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;flushdns&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;sudo killall -HUP mDNSResponder&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Spin up simple Python server in current directory (wherever the command is run)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;pythonserver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;python -m SimpleHTTPServer 8000&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Node.js ENV shortcuts&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;setprod&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;export NODE_ENV=production&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;setdev&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;unset NODE_ENV&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;checkenv&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;echo &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\$&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;NODE_ENV&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# macOS IPv6 toggling&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;disableipv6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;networksetup -setv6off Wi-Fi&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;enableipv6&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;networksetup -setv6automatic Wi-Fi&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# macOS copy IP addresses to clipboard&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;getethernetip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ipconfig getifaddr en0 | pbcopy&quot;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;alias &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;getwirelessip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ipconfig getifaddr en1 | pbcopy&quot;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Configure git CLI (requires .git-prompt shell file)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.git-prompt.sh
&lt;span class=&quot;nv&quot;&gt;PS1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'[\u@\h \W$(__git_ps1 &quot; (%s)&quot;)]\$ '&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# Make nano the default editor because who wants to deal with vi when doing git commit? ;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;EDITOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;nano

&lt;span class=&quot;c&quot;&gt;# Load SSH identities since macOS forgets on reboot&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;ssh-agent -s&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;
ssh-add -A &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Symlink a folder; notice there are no trailing slashes (only verified on macOS)&lt;/span&gt;
ln -sFv /path/to/original-folder /path/to/folder-symlink&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Tail multiple logs at the same time&lt;/span&gt;
tail -f /var/log/name&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.log&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Delete files older than 5 days&lt;/span&gt;
find ./&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; -mtime +5 -exec rm &lt;span class=&quot;o&quot;&gt;{}&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Find processes listening on $PORT&lt;/span&gt;
lsof -n -i:&lt;span class=&quot;nv&quot;&gt;$PORT&lt;/span&gt; | grep LISTEN&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# git commands&lt;/span&gt;
git diff branch1..branch2 -- filename

git cherry-pick &amp;lt;commit &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt;&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;c&quot;&gt;# Show disk space used with human readable file format&lt;/span&gt;
df -h

&lt;span class=&quot;c&quot;&gt;# Find the top 10 largest directories in /path&lt;/span&gt;
du -Sh /path | sort -rh | head -10&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;
</description>
        <pubDate>Wed, 19 Jul 2017 04:15:00 -0400</pubDate>
        <link>http://michaelehead.com/2017/07/19/personal-notes-on-development.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2017/07/19/personal-notes-on-development.html</guid>
        
        <category>ux</category>
        
        <category>design</category>
        
        
      </item>
    
      <item>
        <title>Some Personal Notes on UX Design</title>
        <description>&lt;p&gt;Below are some random personal notes on UX design I’ve put together over the years. I’ve tried to site sources where it makes sense. This used to be a note on my computer, but I think it makes sense to share it here so others might find it useful.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Systems cannot be purely “simple”. A single button is very simple, but provides no usefulness. Balance simplicity with functionality.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Everything&lt;/em&gt; competes for attention.&lt;/p&gt;

&lt;p&gt;Contrast is the strongest visual cue (Dondis, Primer on Visual Literacy).&lt;/p&gt;

&lt;p&gt;If possible, avoid using &lt;em&gt;lorem ipsum&lt;/em&gt; placeholder text in wireframes. It creates extra unnecessary cognitive load on 
users to decipher the language.&lt;/p&gt;

&lt;p&gt;Minimize mouse movement (i.e. drag n’ drop). By minimizing mouse movement, we step around Fitts’ Law and
eliminate the need for fine-grain motor control in user interfaces.&lt;/p&gt;

&lt;p&gt;Be mindful of unintended consequences. (Kind of an oxymoron, huh?)&lt;/p&gt;

&lt;p&gt;User intentions and motivations are more stable than their preferences or actions. Preferences or actions can change when a system is upgraded, but the intentions and motivations rarely change.&lt;/p&gt;

&lt;p&gt;Some things just aren’t intuitive: what is an “intuitive” hand gesture to change the color of a square from purple to yellow or duplicate a square? Every new thing has to be learned. (from a talk called Tenets+Traps at Microsoft Build)&lt;/p&gt;

&lt;p&gt;Expectations drive attention: sometimes once you see something, you can’t stop seeing it. Especially relevant as a developer of 
user interfaces. (also Tenets+Traps)&lt;/p&gt;

&lt;p&gt;Letters are shapes, too. Sometimes that’s all a foreign language speaker needs. “OK” and “TV” are examples.&lt;/p&gt;

&lt;p&gt;Design is biased towards action. If you can’t take action on a problem, it’s not a problem, it’s a circumstance. A lot of people have a problem that isn’t a problem, it’s a circumstance. (adapted from http://www.npr.org/templates/transcript/transcript.php?storyId=507901716)&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Jul 2017 11:07:00 -0400</pubDate>
        <link>http://michaelehead.com/2017/07/16/personal-notes-on-ux-design.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2017/07/16/personal-notes-on-ux-design.html</guid>
        
        <category>ux</category>
        
        <category>design</category>
        
        
      </item>
    
      <item>
        <title>Using Twitter Bootstrap Components with React</title>
        <description>&lt;p&gt;Updated July 2017: The CodePen now handles focus and blur events in a self-contained manner (no need
for a parent or app-level component to track the state) so that keyboard events work better than they did
in the original version.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;facebook.github.io/react/&quot;&gt;React&lt;/a&gt; continues to gain traction as a library for creating 
user interfaces for the web (and for other &lt;a href=&quot;https://facebook.github.io/react-native/&quot;&gt;platforms&lt;/a&gt;). 
React is great for building UI components at a lower level than what you might get from a framework. 
Nonetheless, many frameworks remain popular such as Twitter &lt;a href=&quot;getbootstrap.com&quot;&gt;Bootstrap&lt;/a&gt;, which provides a lot more
ready-made components out of the box.&lt;/p&gt;

&lt;p&gt;Twitter Bootstrap’s components that have interactivity (e.g. Dropdown, Modal, etc), utilize jQuery as the
JavaScript library for handling the state of these components and the event binding. What if you find
yourself wanting to mix Bootstrap and React? If you utilize React elsewhere but want to use a single Bootstrap 
component, it’s not a great idea to include jQuery to make the Bootstrap component “functional”.&lt;/p&gt;

&lt;p&gt;Some options exist, such as &lt;a href=&quot;https://react-bootstrap.github.io/&quot;&gt;React Bootstrap&lt;/a&gt; and &lt;a href=&quot;https://reactstrap.github.io/&quot;&gt;Reactstrap&lt;/a&gt;. Unfortunately for React Bootstrap, it appears to still be using Bootstrap version 3, so if you want to use version 4 (even though it &lt;em&gt;is&lt;/em&gt; alpha) you’re out of luck. Reactstrap is built with version 4 support, but still might be overkill for some particular cases.&lt;/p&gt;

&lt;p&gt;It’s not too difficult to take a Bootstrap component and create a React-ready component from it. Here is an example
of the &lt;a href=&quot;https://codepen.io/michaelehead/pen/gRPqYQ&quot;&gt;dropdown component on CodePen&lt;/a&gt;:&lt;/p&gt;

&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;gRPqYQ&quot; data-default-tab=&quot;js,result&quot; data-user=&quot;michaelehead&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;React Bootstrap Dropdown&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/michaelehead/pen/gRPqYQ/&quot;&gt;React Bootstrap Dropdown&lt;/a&gt; by Michael Head (&lt;a href=&quot;https://codepen.io/michaelehead&quot;&gt;@michaelehead&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;The process was to copy the markup from the &lt;a href=&quot;https://v4-alpha.getbootstrap.com/components/dropdowns/&quot;&gt;documentation&lt;/a&gt;, 
use that as the JSX for the React component to render (which will require all the Bootstrap CSS to render properly),
then adding an event handler for the button to toggle the dropdown state. I watched the DOM for changes
in Chrome DevTools in order to see that the outermost DOM element receives the class “show” when toggled open and
the ARIA attributes update to reflect the open state.&lt;/p&gt;

&lt;p&gt;Word of caution: this method will only get you so far; the &lt;a href=&quot;https://github.com/twbs/bootstrap/blob/v4-dev/js/src/dropdown.js&quot;&gt;JavaScript for the Bootstrap dropdown&lt;/a&gt; component manages a lot more state 
and binds to more events so this may not be the best approach if you want a 100% compliant Bootstrap dropdown
using React for the JS behavior. Nonetheless, it gets you pretty far toward using React with Bootstrap
and avoiding the extra overhead of jQuery being included in your web application just for use with Bootstrap.&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Jun 2017 11:50:00 -0400</pubDate>
        <link>http://michaelehead.com/2017/06/09/using-bootstrap-components-in-react.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2017/06/09/using-bootstrap-components-in-react.html</guid>
        
        
      </item>
    
      <item>
        <title>JavaScript Object Mutation Gotchas</title>
        <description>&lt;p&gt;In entry level computer science courses, one of the topics you discuss in learning a new programming language is “pass by value” and “pass by reference”. 
I’m going to discuss these concepts in relation to some JavaScript object mutation “gotchas” that can creep up.&lt;/p&gt;

&lt;p&gt;If you open up the console tab of your browser’s dev tools you can paste in the following example. 
You’ll see that primitive types in JavaScript are “passed” by value in assignments.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// value of 3 is &quot;copied&quot; to secondNumber&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// overriding the value of secondNumber has no effect on firstNumber&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;secondNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, this is not what happens with objects and their properties. Here’s another example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The green book'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secondBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this still references firstBook&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;secondBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The blue book'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 'The blue book'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/a/3638034/360509&quot;&gt;This StackOverflow answer&lt;/a&gt; calls this “call-by-sharing”. 
Changing the internals of an object mutates the original object.&lt;/p&gt;

&lt;p&gt;Now, where in modern JavaScript usage might this bite a developer? 
For me, it’s often been in mocha tests when I mutate an object’s properties between tests. 
I have a &lt;a href=&quot;https://github.com/headquarters/react-es6-template/blob/object-mutation-example/test/components/Panel.js&quot;&gt;sample test displaying this problem on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Two of my preferred solutions for this, depending on your development environment (browser or server), are to use Object.assign or the ES6 spread operator:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The green book'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secondBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;secondBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The blue book'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 'The green book' is unchanged&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// ES6 spread operator doesn't work in most browsers yet as of 2017-01-05,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// have to test this in the Node REPL&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The green book'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secondBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The blue book'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The title property will overwrite the property brought in from via the spread operator&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 'The green book' is unchanged&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, be mindful of the sort-of-pass-by-reference treatment of objects in JavaScript to avoid object mutation gotchas.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Jan 2017 06:40:00 -0500</pubDate>
        <link>http://michaelehead.com/2017/01/05/javascript-object-mutation-gotchas.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2017/01/05/javascript-object-mutation-gotchas.html</guid>
        
        
      </item>
    
      <item>
        <title>Install Ruby Gems on Mac OS X without sudo</title>
        <description>&lt;p&gt;I have never had a default installation of Ruby gems on Mac OS X let me simply
install new gems without requiring &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;. If you would like to install Ruby gems
without requiring &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;, do the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;GEM_HOME&lt;/code&gt; to your .bash_profile&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;nano ~/.bash_profile&lt;/code&gt; and add &lt;code class=&quot;highlighter-rouge&quot;&gt;export GEM_HOME=/Users/Michael/.gem&lt;/code&gt;
where the path is to your own Home folder&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add the gem executables to your system path&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Also in .bash_profile, add &lt;code class=&quot;highlighter-rouge&quot;&gt;export PATH=&quot;$GEM_HOME/bin:$PATH&quot;&lt;/code&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For some reason these simple steps don’t show up in the top StackOverflow answers.
People often suggest using rvm to install a custom Ruby version that won’t require using
&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt; when installing gems or something like rbenv to create a Ruby environment for the
same benefit. If you simply want to use the default installed Ruby version on Mac OS X
(this works in El Capitan) without requiring &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;, this should do it.&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Feb 2016 05:24:00 -0500</pubDate>
        <link>http://michaelehead.com/2016/02/06/installing-gems-without-sudo.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2016/02/06/installing-gems-without-sudo.html</guid>
        
        
      </item>
    
      <item>
        <title>Wrap long links on small screens</title>
        <description>&lt;p&gt;When building mobile-friendly web pages, you may come across long links in your content that cause horizontal scrollbars on smaller screens. Since links don’t contain spaces, there is no natural break for them to wrap when their parent container shrinks in width. You can use the following CSS rule to fix this:&lt;/p&gt;

&lt;!-- 
	Unfortunately, the syntax highlighting CSS thinks &quot;overflow&quot; in &quot;overflow-wrap&quot; needs to be bold.
	Forgive this inline style as a workaround.
--&gt;
&lt;style&gt;
	.highlight .k { font-weight: normal; }
&lt;/style&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* standard syntax for modern browsers */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;overflow-wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;break-word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* older browser syntax */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;word-wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;break-word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A better approach is to change the text of the link itself. Instead of having &lt;a href=&quot;#nogo&quot;&gt;http://some/really/long/link?withabunchoftextinit&lt;/a&gt;, you can just link an &lt;a href=&quot;#nogo&quot;&gt;appropriate keyword&lt;/a&gt; or two. Better for SEO and better for users. &lt;/p&gt;
</description>
        <pubDate>Mon, 20 Apr 2015 00:26:38 -0400</pubDate>
        <link>http://michaelehead.com/2015/04/20/wrap-long-links-on-small-screens.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2015/04/20/wrap-long-links-on-small-screens.html</guid>
        
        
      </item>
    
      <item>
        <title>How to (quickly) get a domain auth code from register.com</title>
        <description>&lt;p&gt;If, like me, you are trying to transfer a domain away from register.com, you’ll probably end up running into this message:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/register.com-auth-code.png&quot; alt=&quot;Register.com message that says an auth code will be sent in 3-4 days&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Instead of going the “easy” route of requesting an auth code online, just call the customer support number listed there. Navigate the phone tree with 1, 1, and 2, and let the rep know you want to request an auth code for your domain. I was put on hold, then received an email, and finished the call all within 10 minutes. That beats the heck out of waiting 3-4 days. &lt;/p&gt;
</description>
        <pubDate>Wed, 18 Feb 2015 19:24:27 -0500</pubDate>
        <link>http://michaelehead.com/2015/02/18/how-to-quickly-get-a-domain-auth-code-from.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2015/02/18/how-to-quickly-get-a-domain-auth-code-from.html</guid>
        
        
      </item>
    
      <item>
        <title>Accessing real IP addresses on OpenShift</title>
        <description>&lt;p&gt;I’m working on a Sinatra app and using request.ip returned the wrong IP address on OpenShift. This is due to OpenShift running a reverse proxy. After doing some searching online, I found the best way to get the user’s real IP address is as follows:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vc&quot;&gt;@@ip_address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HTTP_X_FORWARDED_FOR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HTTP_X_FORWARDED_FOR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'REMOTE_ADDR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ignoring the syntax (which isn’t very Ruby-like) and the use of a global variable (oh no!), this worked for me on OpenShift. Now, instead of getting a reverse proxy IP, I get the user’s real IP address. &lt;/p&gt;
</description>
        <pubDate>Thu, 12 Feb 2015 16:22:00 -0500</pubDate>
        <link>http://michaelehead.com/2015/02/12/accessing-real-ip-addresses-on-openshift.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2015/02/12/accessing-real-ip-addresses-on-openshift.html</guid>
        
        
      </item>
    
      <item>
        <title>DataMapper settings on OpenShift with PostgreSQL</title>
        <description>&lt;p&gt;The OpenShift documentation shows that a PostgreSQL connection string should look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;postgresql://user:password@host:port&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, the DataMapper documentation shows that a PostgreSQL connection string should look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;postgres://user:password@hostname/database&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When using DataMapper on OpenShift, though, follow the DataMapper documentation, &lt;strong&gt;not&lt;/strong&gt; the OpenShift documentation. The DataMapper gem attempts to require adapters based on the prefix name, so if you use “postgresql” as the prefix, it attempts to load the “dm-postgresql-adapter” gem, which does not exist. You will get a “cannot load file – dm-postgresql-adapter” error. So, stick with the DataMapper version and use the “postgres” prefix. &lt;/p&gt;
</description>
        <pubDate>Tue, 10 Feb 2015 11:43:42 -0500</pubDate>
        <link>http://michaelehead.com/2015/02/10/datamapper-settings-on-openshift-with-postgresql.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2015/02/10/datamapper-settings-on-openshift-with-postgresql.html</guid>
        
        <category>development</category>
        
        <category>ruby</category>
        
        <category>databases</category>
        
        
      </item>
    
  </channel>
</rss>
