<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Michael's Headquarters</title>
    <description>Michael Head is a UX-focused software engineer with more than 8 years of experience building awesome user experiences for small agencies, mid-sized companies, and Fortune 50 corporations.
</description>
    <link>http://michaelehead.com/</link>
    <atom:link href="http://michaelehead.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 19 Jul 2017 11:06:48 -0400</pubDate>
    <lastBuildDate>Wed, 19 Jul 2017 11:06:48 -0400</lastBuildDate>
    <generator>Jekyll v3.3.1</generator>
    
      <item>
        <title>Some Personal Notes on UX Design</title>
        <description>&lt;p&gt;Below are some random personal notes on UX design I’ve put together over the years. I’ve tried to site sources where it makes sense. This used to be a note on my computer, but I think it makes sense to share it here so others might find it useful.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Systems cannot be purely “simple”. A single button is very simple, but provides no usefulness. Balance simplicity with functionality.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Everything&lt;/em&gt; competes for attention.&lt;/p&gt;

&lt;p&gt;Contrast is the strongest visual cue (Dondis, Primer on Visual Literacy).&lt;/p&gt;

&lt;p&gt;If possible, avoid using &lt;em&gt;lorem ipsum&lt;/em&gt; placeholder text in wireframes. It creates extra unnecessary cognitive load on 
users to decipher the language.&lt;/p&gt;

&lt;p&gt;Minimize mouse movement (i.e. drag n’ drop). By minimizing mouse movement, we step around Fitts’ Law and
eliminate the need for fine-grain motor control in user interfaces.&lt;/p&gt;

&lt;p&gt;Be mindful of unintended consequences. (Kind of an oxymoron, huh?)&lt;/p&gt;

&lt;p&gt;User intentions and motivations are more stable than their preferences or actions. Preferences or actions can change when a system is upgraded, but the intentions and motivations rarely change.&lt;/p&gt;

&lt;p&gt;Some things just aren’t intuitive: what is an “intuitive” hand gesture to change the color of a square from purple to yellow or duplicate a square? Every new thing has to be learned. (from a talk called Tenets+Traps at Microsoft Build)&lt;/p&gt;

&lt;p&gt;Expectations drive attention: sometimes once you see something, you can’t stop seeing it. Especially relevant as a developer of 
user interfaces. (also Tenets+Traps)&lt;/p&gt;

&lt;p&gt;Letters are shapes, too. Sometimes that’s all a foreign language speaker needs. “OK” and “TV” are examples.&lt;/p&gt;

&lt;p&gt;Design is biased towards action. If you can’t take action on a problem, it’s not a problem, it’s a circumstance. A lot of people have a problem that isn’t a problem, it’s a circumstance. (adapted from http://www.npr.org/templates/transcript/transcript.php?storyId=507901716)&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Jul 2017 11:07:00 -0400</pubDate>
        <link>http://michaelehead.com/2017/07/16/personal-notes-on-ux-design.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2017/07/16/personal-notes-on-ux-design.html</guid>
        
        <category>ux</category>
        
        <category>design</category>
        
        
      </item>
    
      <item>
        <title>Using Twitter Bootstrap Components with React</title>
        <description>&lt;p&gt;Updated July 2017: The CodePen now handles focus and blur events in a self-contained manner (no need
for a parent or app-level component to track the state) so that keyboard events work better than they did
in the original version.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;facebook.github.io/react/&quot;&gt;React&lt;/a&gt; continues to gain traction as a library for creating 
user interfaces for the web (and for other &lt;a href=&quot;https://facebook.github.io/react-native/&quot;&gt;platforms&lt;/a&gt;). 
React is great for building UI components at a lower level than what you might get from a framework. 
Nonetheless, many frameworks remain popular such as Twitter &lt;a href=&quot;getbootstrap.com&quot;&gt;Bootstrap&lt;/a&gt;, which provides a lot more
ready-made components out of the box.&lt;/p&gt;

&lt;p&gt;Twitter Bootstrap’s components that have interactivity (e.g. Dropdown, Modal, etc), utilize jQuery as the
JavaScript library for handling the state of these components and the event binding. What if you find
yourself wanting to mix Bootstrap and React? If you utilize React elsewhere but want to use a single Bootstrap 
component, it’s not a great idea to include jQuery to make the Bootstrap component “functional”.&lt;/p&gt;

&lt;p&gt;Some options exist, such as &lt;a href=&quot;https://react-bootstrap.github.io/&quot;&gt;React Bootstrap&lt;/a&gt; and &lt;a href=&quot;https://reactstrap.github.io/&quot;&gt;Reactstrap&lt;/a&gt;. Unfortunately for React Bootstrap, it appears to still be using Bootstrap version 3, so if you want to use version 4 (even though it &lt;em&gt;is&lt;/em&gt; alpha) you’re out of luck. Reactstrap is built with version 4 support, but still might be overkill for some particular cases.&lt;/p&gt;

&lt;p&gt;It’s not too difficult to take a Bootstrap component and create a React-ready component from it. Here is an example
of the &lt;a href=&quot;https://codepen.io/michaelehead/pen/gRPqYQ&quot;&gt;dropdown component on CodePen&lt;/a&gt;:&lt;/p&gt;

&lt;p data-height=&quot;265&quot; data-theme-id=&quot;0&quot; data-slug-hash=&quot;gRPqYQ&quot; data-default-tab=&quot;js,result&quot; data-user=&quot;michaelehead&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;React Bootstrap Dropdown&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;https://codepen.io/michaelehead/pen/gRPqYQ/&quot;&gt;React Bootstrap Dropdown&lt;/a&gt; by Michael Head (&lt;a href=&quot;https://codepen.io/michaelehead&quot;&gt;@michaelehead&lt;/a&gt;) on &lt;a href=&quot;https://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;The process was to copy the markup from the &lt;a href=&quot;https://v4-alpha.getbootstrap.com/components/dropdowns/&quot;&gt;documentation&lt;/a&gt;, 
use that as the JSX for the React component to render (which will require all the Bootstrap CSS to render properly),
then adding an event handler for the button to toggle the dropdown state. I watched the DOM for changes
in Chrome DevTools in order to see that the outermost DOM element receives the class “show” when toggled open and
the ARIA attributes update to reflect the open state.&lt;/p&gt;

&lt;p&gt;Word of caution: this method will only get you so far; the &lt;a href=&quot;https://github.com/twbs/bootstrap/blob/v4-dev/js/src/dropdown.js&quot;&gt;JavaScript for the Bootstrap dropdown&lt;/a&gt; component manages a lot more state 
and binds to more events so this may not be the best approach if you want a 100% compliant Bootstrap dropdown
using React for the JS behavior. Nonetheless, it gets you pretty far toward using React with Bootstrap
and avoiding the extra overhead of jQuery being included in your web application just for use with Bootstrap.&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Jun 2017 11:50:00 -0400</pubDate>
        <link>http://michaelehead.com/2017/06/09/using-bootstrap-components-in-react.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2017/06/09/using-bootstrap-components-in-react.html</guid>
        
        
      </item>
    
      <item>
        <title>JavaScript Object Mutation Gotchas</title>
        <description>&lt;p&gt;In entry level computer science courses, one of the topics you discuss in learning a new programming language is “pass by value” and “pass by reference”. 
I’m going to discuss these concepts in relation to some JavaScript object mutation “gotchas” that can creep up.&lt;/p&gt;

&lt;p&gt;If you open up the console tab of your browser’s dev tools you can paste in the following example. 
You’ll see that primitive types in JavaScript are “passed” by value in assignments.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// value of 3 is &quot;copied&quot; to secondNumber&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;secondNumber&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// overriding the value of secondNumber has no effect on firstNumber&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 3&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;secondNumber&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 10&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, this is not what happens with objects and their properties. Here’s another example:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The green book'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secondBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// this still references firstBook&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;secondBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The blue book'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 'The blue book'&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/a/3638034/360509&quot;&gt;This StackOverflow answer&lt;/a&gt; calls this “call-by-sharing”. 
Changing the internals of an object mutates the original object.&lt;/p&gt;

&lt;p&gt;Now, where in modern JavaScript usage might this bite a developer? 
For me, it’s often been in mocha tests when I mutate an object’s properties between tests. 
I have a &lt;a href=&quot;https://github.com/headquarters/react-es6-template/blob/object-mutation-example/test/components/Panel.js&quot;&gt;sample test displaying this problem on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Two of my preferred solutions for this, depending on your development environment (browser or server), are to use Object.assign or the ES6 spread operator:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The green book'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secondBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;assign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({},&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;secondBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The blue book'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 'The green book' is unchanged&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;c1&quot;&gt;// ES6 spread operator doesn't work in most browsers yet as of 2017-01-05,&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;// have to test this in the Node REPL&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The green book'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;secondBook&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'The blue book'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// The title property will overwrite the property brought in from via the spread operator&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;firstBook&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 'The green book' is unchanged&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;So, be mindful of the sort-of-pass-by-reference treatment of objects in JavaScript to avoid object mutation gotchas.&lt;/p&gt;
</description>
        <pubDate>Thu, 05 Jan 2017 06:40:00 -0500</pubDate>
        <link>http://michaelehead.com/2017/01/05/javascript-object-mutation-gotchas.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2017/01/05/javascript-object-mutation-gotchas.html</guid>
        
        
      </item>
    
      <item>
        <title>Install Ruby Gems on Mac OS X without sudo</title>
        <description>&lt;p&gt;I have never had a default installation of Ruby gems on Mac OS X let me simply
install new gems without requiring &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;. If you would like to install Ruby gems
without requiring &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;, do the following:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Add &lt;code class=&quot;highlighter-rouge&quot;&gt;GEM_HOME&lt;/code&gt; to your .bash_profile&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;For example, &lt;code class=&quot;highlighter-rouge&quot;&gt;nano ~/.bash_profile&lt;/code&gt; and add &lt;code class=&quot;highlighter-rouge&quot;&gt;export GEM_HOME=/Users/Michael/.gem&lt;/code&gt;
where the path is to your own Home folder&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add the gem executables to your system path&lt;/p&gt;

    &lt;blockquote&gt;
      &lt;p&gt;Also in .bash_profile, add &lt;code class=&quot;highlighter-rouge&quot;&gt;export PATH=&quot;$GEM_HOME/bin:$PATH&quot;&lt;/code&gt;&lt;/p&gt;
    &lt;/blockquote&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;For some reason these simple steps don’t show up in the top StackOverflow answers.
People often suggest using rvm to install a custom Ruby version that won’t require using
&lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt; when installing gems or something like rbenv to create a Ruby environment for the
same benefit. If you simply want to use the default installed Ruby version on Mac OS X
(this works in El Capitan) without requiring &lt;code class=&quot;highlighter-rouge&quot;&gt;sudo&lt;/code&gt;, this should do it.&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Feb 2016 05:24:00 -0500</pubDate>
        <link>http://michaelehead.com/2016/02/06/installing-gems-without-sudo.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2016/02/06/installing-gems-without-sudo.html</guid>
        
        
      </item>
    
      <item>
        <title>Wrap long links on small screens</title>
        <description>&lt;p&gt;When building mobile-friendly web pages, you may come across long links in your content that cause horizontal scrollbars on smaller screens. Since links don’t contain spaces, there is no natural break for them to wrap when their parent container shrinks in width. You can use the following CSS rule to fix this:&lt;/p&gt;

&lt;!-- 
	Unfortunately, the syntax highlighting CSS thinks &quot;overflow&quot; in &quot;overflow-wrap&quot; needs to be bold.
	Forgive this inline style as a workaround.
--&gt;
&lt;style&gt;
	.highlight .k { font-weight: normal; }
&lt;/style&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* standard syntax for modern browsers */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;overflow-wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;break-word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* older browser syntax */&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;word-wrap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;break-word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;A better approach is to change the text of the link itself. Instead of having &lt;a href=&quot;#nogo&quot;&gt;http://some/really/long/link?withabunchoftextinit&lt;/a&gt;, you can just link an &lt;a href=&quot;#nogo&quot;&gt;appropriate keyword&lt;/a&gt; or two. Better for SEO and better for users. &lt;/p&gt;
</description>
        <pubDate>Mon, 20 Apr 2015 00:26:38 -0400</pubDate>
        <link>http://michaelehead.com/2015/04/20/wrap-long-links-on-small-screens.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2015/04/20/wrap-long-links-on-small-screens.html</guid>
        
        
      </item>
    
      <item>
        <title>How to (quickly) get a domain auth code from register.com</title>
        <description>&lt;p&gt;If, like me, you are trying to transfer a domain away from register.com, you’ll probably end up running into this message:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/register.com-auth-code.png&quot; alt=&quot;Register.com message that says an auth code will be sent in 3-4 days&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Instead of going the “easy” route of requesting an auth code online, just call the customer support number listed there. Navigate the phone tree with 1, 1, and 2, and let the rep know you want to request an auth code for your domain. I was put on hold, then received an email, and finished the call all within 10 minutes. That beats the heck out of waiting 3-4 days. &lt;/p&gt;
</description>
        <pubDate>Wed, 18 Feb 2015 19:24:27 -0500</pubDate>
        <link>http://michaelehead.com/2015/02/18/how-to-quickly-get-a-domain-auth-code-from.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2015/02/18/how-to-quickly-get-a-domain-auth-code-from.html</guid>
        
        
      </item>
    
      <item>
        <title>Accessing real IP addresses on OpenShift</title>
        <description>&lt;p&gt;I’m working on a Sinatra app and using request.ip returned the wrong IP address on OpenShift. This is due to OpenShift running a reverse proxy. After doing some searching online, I found the best way to get the user’s real IP address is as follows:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;vc&quot;&gt;@@ip_address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HTTP_X_FORWARDED_FOR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;?&lt;/span&gt; 
    &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'HTTP_X_FORWARDED_FOR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;env&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'REMOTE_ADDR'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Ignoring the syntax (which isn’t very Ruby-like) and the use of a global variable (oh no!), this worked for me on OpenShift. Now, instead of getting a reverse proxy IP, I get the user’s real IP address. &lt;/p&gt;
</description>
        <pubDate>Thu, 12 Feb 2015 16:22:00 -0500</pubDate>
        <link>http://michaelehead.com/2015/02/12/accessing-real-ip-addresses-on-openshift.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2015/02/12/accessing-real-ip-addresses-on-openshift.html</guid>
        
        
      </item>
    
      <item>
        <title>DataMapper settings on OpenShift with PostgreSQL</title>
        <description>&lt;p&gt;The OpenShift documentation shows that a PostgreSQL connection string should look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;postgresql://user:password@host:port&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;However, the DataMapper documentation shows that a PostgreSQL connection string should look like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;postgres://user:password@hostname/database&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;When using DataMapper on OpenShift, though, follow the DataMapper documentation, &lt;strong&gt;not&lt;/strong&gt; the OpenShift documentation. The DataMapper gem attempts to require adapters based on the prefix name, so if you use “postgresql” as the prefix, it attempts to load the “dm-postgresql-adapter” gem, which does not exist. You will get a “cannot load file – dm-postgresql-adapter” error. So, stick with the DataMapper version and use the “postgres” prefix. &lt;/p&gt;
</description>
        <pubDate>Tue, 10 Feb 2015 11:43:42 -0500</pubDate>
        <link>http://michaelehead.com/2015/02/10/datamapper-settings-on-openshift-with-postgresql.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2015/02/10/datamapper-settings-on-openshift-with-postgresql.html</guid>
        
        <category>development</category>
        
        <category>ruby</category>
        
        <category>databases</category>
        
        
      </item>
    
      <item>
        <title>Automatically go to folder when logging into Vagrant VM</title>
        <description>&lt;p&gt;Instead of going to the home directory, you may prefer to go to another directory when you SSH into a Vagrant VM. If so, here’s how to accomplish that.&lt;/p&gt;

&lt;p&gt;SSH into the Vagrant box you want to modify. Once logged in, open &lt;code class=&quot;highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt; in your editor of choice. Add &lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;cd /path/to/your/preferred/location&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;to the bottom the &lt;code class=&quot;highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; file. Next time you SSH into your Vagrant VM, you’ll be where you want to be without having to change directories manually every time. Verified on Ubuntu 14.04. Tip inspired by &lt;a href=&quot;http://unix.stackexchange.com/a/32471&quot;&gt;http://unix.stackexchange.com/a/32471&lt;/a&gt;. &lt;/p&gt;
</description>
        <pubDate>Thu, 18 Dec 2014 15:41:17 -0500</pubDate>
        <link>http://michaelehead.com/2014/12/18/automatically-go-to-folder-when-logging-into.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2014/12/18/automatically-go-to-folder-when-logging-into.html</guid>
        
        
      </item>
    
      <item>
        <title>Speeding up Yosemite boot time on a 2010 MacBook Pro</title>
        <description>&lt;p&gt;I have a mid-2010 MacBook Pro with a dual core i7, 8GB of RAM, and a solid state drive (SSD). In its heyday, with Snow Leopard, it was pretty damn fast. In 2014, this once-majestic laptop has finally succumbed to &lt;a href=&quot;http://en.wikipedia.org/wiki/Wirth%27s_law&quot;&gt;Wirth’s law&lt;/a&gt;. &lt;/p&gt;

&lt;p&gt;Mavericks ran on it well enough, but there were definitely visual glitches and problems here and there, so I decided to give Yosemite a chance. I did a clean install of Yosemite and found that things weren’t as bad as I had expected. However, the first time I restarted the computer, the boot time was 1 minute and 15 seconds from chime sound to log in screen. On an SSD with an i7 processor, that was unacceptable. 
Doing some research online, I found some recommendations for ways to possibly improve the performance. So, I tried two of these:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://support.apple.com/en-us/HT201295&quot;&gt;Resetting the SMC&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;http://support.apple.com/kb/PH18761&quot;&gt;Resetting the PRAM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Following those two steps, the boot time dropped from 1:15 to 15 seconds. So, resetting the SMC and the PRAM reduced the boot time in Yosemite by a full minute. Thank goodness.&lt;/p&gt;

&lt;p&gt;So far, I think I’ll stick with Yosemite. Fixing the boot time issue helped sway me a bit, but it’s really disappointing that users, in 2014, have to resort to such “technical” things to fix performance with a clean install of an operating system. &lt;/p&gt;
</description>
        <pubDate>Sat, 13 Dec 2014 15:10:26 -0500</pubDate>
        <link>http://michaelehead.com/2014/12/13/speeding-up-yosemite-boot-time-on-a-2010-macbook.html</link>
        <guid isPermaLink="true">http://michaelehead.com/2014/12/13/speeding-up-yosemite-boot-time-on-a-2010-macbook.html</guid>
        
        
      </item>
    
  </channel>
</rss>
